Subject: TLS missing ciphersuite settings when CLI flags used

CVE: CVE-2021-32026

Background:

NATS.io is a high performance open source pub-sub distributed communication
technology, built for the cloud, on-premise, IoT, and edge computing.
The server is written in Go and there are client libraries in many languages
and frameworks.


Problem Description:

The NATS server by default uses a restricted set of modern ciphersuites
for TLS.  This selection can be overridden through configuration.
The defaults include just RSA and ECDSA with either AES/GCM with a SHA2
digest or ChaCha20/Poly1305.

The configuration system allows for extensive use of CLI options to
override configuration settings.  When using these to set a key/cert for
TLS, the restricted ciphersuite settings were lost, enabling all
ciphersuites supported by Go by default.

None of these additional ciphersuites are broken, so the NATS
maintainers have fixed this in public git and the next release is not
being hurried, nor is this security advisory embargoed.


Affected versions:

NATS Server:
 * All versions prior to 2.2.3
 * fixed with nats-io/nats-server commit ffccc2e1bd (2021-04-29)


Impact:

If a server administrator chooses to start the nats-server with TLS
configuration parameters provided on the command-line, then clients can
negotiate TLS ciphersuites which were not expected.


Workaround:

Use a configuration file to set the TLS parameters instead of
command-line options.


Solution:

Upgrade the NATS server.


Credits:

This issue was identified and reported by SimCorp.


References:

* GitHub Security Advisory:
  <https://github.com/nats-io/nats-server/security/advisories/GHSA-jj54-5q2m-q7pj>
